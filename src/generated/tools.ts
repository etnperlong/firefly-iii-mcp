// This file is auto-generated by scripts/generator.ts

import type { McpToolDefinition, SecuritySchemeDefinition } from '../types';

export const generatedTools: McpToolDefinition[] = [
  {
    "name": "list_transaction_by_account",
    "tags": [
      "accounts"
    ],
    "description": "This endpoint returns a list of all the transactions connected to the account.\n",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "id": {
          "type": "string",
          "description": "The ID of the account."
        },
        "start": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD.\n"
        },
        "end": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD.\n"
        },
        "type": {
          "type": "string",
          "enum": [
            "all",
            "withdrawal",
            "withdrawals",
            "expense",
            "deposit",
            "deposits",
            "income",
            "transfer",
            "transfers",
            "opening_balance",
            "reconciliation",
            "special",
            "specials",
            "default"
          ],
          "description": "Optional filter on the transaction type(s) returned."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/accounts/{id}/transactions",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the account."
      },
      {
        "in": "query",
        "name": "start",
        "description": "A date formatted YYYY-MM-DD.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-09-17"
        }
      },
      {
        "in": "query",
        "name": "end",
        "description": "A date formatted YYYY-MM-DD.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-09-17"
        }
      },
      {
        "in": "query",
        "name": "type",
        "description": "Optional filter on the transaction type(s) returned.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "withdrawal",
            "withdrawals",
            "expense",
            "deposit",
            "deposits",
            "income",
            "transfer",
            "transfers",
            "opening_balance",
            "reconciliation",
            "special",
            "specials",
            "default"
          ]
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "id",
        "in": "path"
      },
      {
        "name": "start",
        "in": "query"
      },
      {
        "name": "end",
        "in": "query"
      },
      {
        "name": "type",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_transaction_by_account"
  },
  {
    "name": "list_attachment_by_account",
    "tags": [
      "accounts"
    ],
    "description": "Lists all attachments.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "id": {
          "type": "string",
          "description": "The ID of the account."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/accounts/{id}/attachments",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the account."
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_attachment_by_account"
  },
  {
    "name": "list_piggy_bank_by_account",
    "tags": [
      "accounts"
    ],
    "description": "This endpoint returns a list of all the piggy banks connected to the account.\n",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "id": {
          "type": "string",
          "description": "The ID of the account."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/accounts/{id}/piggy-banks",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the account."
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_piggy_bank_by_account"
  },
  {
    "name": "list_account",
    "tags": [
      "accounts"
    ],
    "description": "This endpoint returns a list of all the accounts owned by the authenticated user.\n",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "date": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD. When added to the request, Firefly III will show the account's balance on that day.\n"
        },
        "type": {
          "type": "string",
          "enum": [
            "all",
            "asset",
            "cash",
            "expense",
            "revenue",
            "special",
            "hidden",
            "liability",
            "liabilities",
            "Default account",
            "Cash account",
            "Asset account",
            "Expense account",
            "Revenue account",
            "Initial balance account",
            "Beneficiary account",
            "Import account",
            "Reconciliation account",
            "Loan",
            "Debt",
            "Mortgage"
          ],
          "description": "Optional filter on the account type(s) returned"
        }
      }
    },
    "method": "get",
    "pathTemplate": "/v1/accounts",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "query",
        "name": "date",
        "description": "A date formatted YYYY-MM-DD. When added to the request, Firefly III will show the account's balance on that day.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      {
        "in": "query",
        "name": "type",
        "description": "Optional filter on the account type(s) returned",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "asset",
            "cash",
            "expense",
            "revenue",
            "special",
            "hidden",
            "liability",
            "liabilities",
            "Default account",
            "Cash account",
            "Asset account",
            "Expense account",
            "Revenue account",
            "Initial balance account",
            "Beneficiary account",
            "Import account",
            "Reconciliation account",
            "Loan",
            "Debt",
            "Mortgage"
          ]
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "date",
        "in": "query"
      },
      {
        "name": "type",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_account"
  },
  {
    "name": "get_account",
    "tags": [
      "accounts"
    ],
    "description": "Returns a single account by its ID.\n",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the account."
        },
        "date": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD. When added to the request, Firefly III will show the account's balance on that day.\n"
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/accounts/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the account."
      },
      {
        "in": "query",
        "name": "date",
        "description": "A date formatted YYYY-MM-DD. When added to the request, Firefly III will show the account's balance on that day.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date"
        }
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      },
      {
        "name": "date",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "get_account"
  },
  {
    "name": "update_account",
    "tags": [
      "accounts"
    ],
    "description": "Used to update a single account. All fields that are not submitted will be cleared (set to NULL). The model will tell you which fields are mandatory.\n",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the account."
        },
        "requestBody": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "iban": {
              "type": "string",
              "nullable": true
            },
            "bic": {
              "type": "string",
              "nullable": true
            },
            "account_number": {
              "type": "string",
              "nullable": true
            },
            "opening_balance": {
              "type": "string"
            },
            "opening_balance_date": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "virtual_balance": {
              "type": "string"
            },
            "currency_id": {
              "type": "string",
              "description": "Use either currency_id or currency_code. Defaults to the user's default currency."
            },
            "currency_code": {
              "type": "string",
              "description": "Use either currency_id or currency_code. Defaults to the user's default currency."
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "If omitted, defaults to true."
            },
            "order": {
              "type": "integer",
              "format": "int32",
              "description": "Order of the account"
            },
            "include_net_worth": {
              "type": "boolean",
              "default": true,
              "description": "If omitted, defaults to true."
            },
            "account_role": {
              "type": "string",
              "description": "Is only mandatory when the type is asset.",
              "nullable": true,
              "enum": [
                "defaultAsset",
                "sharedAsset",
                "savingAsset",
                "ccAsset",
                "cashWalletAsset",
                null
              ]
            },
            "credit_card_type": {
              "type": "string",
              "description": "Mandatory when the account_role is ccAsset. Can only be monthlyFull or null.",
              "nullable": true,
              "enum": [
                "monthlyFull",
                null
              ]
            },
            "monthly_payment_date": {
              "nullable": true,
              "type": "string",
              "format": "date-time",
              "description": "Mandatory when the account_role is ccAsset. Moment at which CC payment installments are asked for by the bank."
            },
            "liability_type": {
              "type": "string",
              "description": "Mandatory when type is liability. Specifies the exact type.",
              "nullable": true,
              "enum": [
                "loan",
                "debt",
                "mortgage",
                null
              ]
            },
            "interest": {
              "type": "string",
              "description": "Mandatory when type is liability. Interest percentage.",
              "nullable": true
            },
            "interest_period": {
              "type": "string",
              "description": "Mandatory when type is liability. Period over which the interest is calculated.",
              "nullable": true,
              "enum": [
                "weekly",
                "monthly",
                "quarterly",
                "half-year",
                "yearly",
                null
              ]
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "latitude": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "Latitude of the account's location, if applicable. Can be used to draw a map. If omitted, the existing location will be kept. If submitted as NULL, the current location will be removed."
            },
            "longitude": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "Latitude of the account's location, if applicable. Can be used to draw a map. If omitted, the existing location will be kept. If submitted as NULL, the current location will be removed."
            },
            "zoom_level": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "description": "Zoom level for the map, if drawn. This to set the box right. Unfortunately this is a proprietary value because each map provider has different zoom levels. If omitted, the existing location will be kept. If submitted as NULL, the current location will be removed."
            }
          },
          "description": "JSON array or formdata with updated account information. See the model for the exact specifications."
        }
      },
      "required": [
        "id",
        "requestBody"
      ]
    },
    "method": "put",
    "pathTemplate": "/v1/accounts/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the account."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "requestBodyContentType": "application/json",
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "update_account"
  },
  {
    "name": "list_attachment",
    "tags": [
      "attachments"
    ],
    "description": "This endpoint lists all attachments.\n",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        }
      }
    },
    "method": "get",
    "pathTemplate": "/v1/attachments",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_attachment"
  },
  {
    "name": "store_attachment",
    "tags": [
      "attachments"
    ],
    "description": "Creates a new attachment. The data required can be submitted as a JSON body or as a list of parameters. You cannot use this endpoint to upload the actual file data (see below). This endpoint only creates the attachment object.\n",
    "inputSchema": {
      "type": "object",
      "properties": {
        "requestBody": {
          "type": "object",
          "required": [
            "filename",
            "attachable_type",
            "attachable_id"
          ],
          "properties": {
            "filename": {
              "type": "string"
            },
            "attachable_type": {
              "type": "string",
              "description": "The object class to which the attachment must be linked.",
              "enum": [
                "Account",
                "Budget",
                "Bill",
                "TransactionJournal",
                "PiggyBank",
                "Tag"
              ]
            },
            "attachable_id": {
              "type": "string",
              "description": "ID of the model this attachment is linked to."
            },
            "title": {
              "type": "string"
            },
            "notes": {
              "type": "string",
              "nullable": true
            }
          },
          "description": "JSON array or key=value pairs with the necessary attachment information. See the model for the exact specifications."
        }
      },
      "required": [
        "requestBody"
      ]
    },
    "method": "post",
    "pathTemplate": "/v1/attachments",
    "parameters": [],
    "executionParameters": [],
    "requestBodyContentType": "application/json",
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "store_attachment"
  },
  {
    "name": "get_attachment",
    "tags": [
      "attachments"
    ],
    "description": "Get a single attachment. This endpoint only returns the available metadata for the attachment. Actual file data is handled in two other endpoints (see below).\n",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the attachment."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/attachments/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the attachment."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "get_attachment"
  },
  {
    "name": "update_attachment",
    "tags": [
      "attachments"
    ],
    "description": "Update the meta data for an existing attachment. This endpoint does not allow you to upload or download data. For that, see below.\n",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the attachment."
        },
        "requestBody": {
          "type": "object",
          "properties": {
            "filename": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "notes": {
              "type": "string",
              "nullable": true
            }
          },
          "description": "JSON array with updated attachment information. See the model for the exact specifications."
        }
      },
      "required": [
        "id",
        "requestBody"
      ]
    },
    "method": "put",
    "pathTemplate": "/v1/attachments/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the attachment."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "requestBodyContentType": "application/json",
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "update_attachment"
  },
  {
    "name": "delete_attachment",
    "tags": [
      "attachments"
    ],
    "description": "With this endpoint you delete an attachment, including any stored file data.\n",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the single attachment."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "delete",
    "pathTemplate": "/v1/attachments/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the single attachment."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "delete_attachment"
  },
  {
    "name": "download_attachment",
    "tags": [
      "attachments"
    ],
    "description": "This endpoint allows you to download the binary content of a transaction. It will be sent to you as a download, using the content type \"application/octet-stream\" and content disposition \"attachment; filename=example.pdf\".\n",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the attachment."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/attachments/{id}/download",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the attachment."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "download_attachment"
  },
  {
    "name": "upload_attachment",
    "tags": [
      "attachments"
    ],
    "description": "Use this endpoint to upload (and possible overwrite) the file contents of an attachment. Simply put the entire file in the body as binary data.\n",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the attachment."
        },
        "requestBody": {
          "type": "string",
          "description": "Request body (content type: application/octet-stream)"
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "post",
    "pathTemplate": "/v1/attachments/{id}/upload",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the attachment."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "requestBodyContentType": "application/octet-stream",
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "upload_attachment"
  },
  {
    "name": "list_attachment_by_bill",
    "tags": [
      "bills"
    ],
    "description": "This endpoint will list all attachments linked to the bill.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "id": {
          "type": "string",
          "description": "The ID of the bill."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/bills/{id}/attachments",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the bill."
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_attachment_by_bill"
  },
  {
    "name": "list_rule_by_bill",
    "tags": [
      "bills"
    ],
    "description": "This endpoint will list all rules that have an action to set the bill to this bill.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the bill."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/bills/{id}/rules",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the bill."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_rule_by_bill"
  },
  {
    "name": "list_transaction_by_bill",
    "tags": [
      "bills"
    ],
    "description": "This endpoint will list all transactions linked to this bill.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "id": {
          "type": "string",
          "description": "The ID of the bill."
        },
        "start": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD.\n"
        },
        "end": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD.\n"
        },
        "type": {
          "type": "string",
          "enum": [
            "all",
            "withdrawal",
            "withdrawals",
            "expense",
            "deposit",
            "deposits",
            "income",
            "transfer",
            "transfers",
            "opening_balance",
            "reconciliation",
            "special",
            "specials",
            "default"
          ],
          "description": "Optional filter on the transaction type(s) returned"
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/bills/{id}/transactions",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the bill."
      },
      {
        "in": "query",
        "name": "start",
        "description": "A date formatted YYYY-MM-DD.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-09-17"
        }
      },
      {
        "in": "query",
        "name": "end",
        "description": "A date formatted YYYY-MM-DD.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-12-31"
        }
      },
      {
        "in": "query",
        "name": "type",
        "description": "Optional filter on the transaction type(s) returned",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "withdrawal",
            "withdrawals",
            "expense",
            "deposit",
            "deposits",
            "income",
            "transfer",
            "transfers",
            "opening_balance",
            "reconciliation",
            "special",
            "specials",
            "default"
          ]
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "id",
        "in": "path"
      },
      {
        "name": "start",
        "in": "query"
      },
      {
        "name": "end",
        "in": "query"
      },
      {
        "name": "type",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_transaction_by_bill"
  },
  {
    "name": "list_bill",
    "tags": [
      "bills"
    ],
    "description": "This endpoint will list all the user's bills.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "start": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD. If it is are added to the request, Firefly III will calculate the appropriate payment and paid dates.\n"
        },
        "end": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD. If it is added to the request, Firefly III will calculate the appropriate payment and paid dates.\n"
        }
      }
    },
    "method": "get",
    "pathTemplate": "/v1/bills",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "query",
        "name": "start",
        "description": "A date formatted YYYY-MM-DD. If it is are added to the request, Firefly III will calculate the appropriate payment and paid dates.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-09-17"
        }
      },
      {
        "in": "query",
        "name": "end",
        "description": "A date formatted YYYY-MM-DD. If it is added to the request, Firefly III will calculate the appropriate payment and paid dates.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-12-31"
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "start",
        "in": "query"
      },
      {
        "name": "end",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_bill"
  },
  {
    "name": "store_bill",
    "tags": [
      "bills"
    ],
    "description": "Creates a new bill. The data required can be submitted as a JSON body or as a list of parameters.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "requestBody": {
          "type": "object",
          "required": [
            "name",
            "amount_min",
            "amount_max",
            "date",
            "repeat_freq"
          ],
          "properties": {
            "currency_id": {
              "type": "string",
              "description": "Use either currency_id or currency_code"
            },
            "currency_code": {
              "type": "string",
              "description": "Use either currency_id or currency_code"
            },
            "name": {
              "type": "string"
            },
            "amount_min": {
              "type": "string"
            },
            "amount_max": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "end_date": {
              "type": "string",
              "format": "date-time",
              "description": "The date after which this bill is no longer valid or applicable"
            },
            "extension_date": {
              "type": "string",
              "format": "date-time",
              "description": "The date before which the bill must be renewed (or cancelled)"
            },
            "repeat_freq": {
              "type": "string",
              "description": "How often the bill must be paid.",
              "enum": [
                "weekly",
                "monthly",
                "quarterly",
                "half-year",
                "yearly"
              ]
            },
            "skip": {
              "type": "integer",
              "format": "int32",
              "description": "How often the bill must be skipped. 1 means a bi-monthly bill."
            },
            "active": {
              "type": "boolean",
              "description": "If the bill is active."
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "object_group_id": {
              "type": "string",
              "nullable": true,
              "description": "The group ID of the group this object is part of. NULL if no group."
            },
            "object_group_title": {
              "type": "string",
              "nullable": true,
              "description": "The name of the group. NULL if no group."
            }
          },
          "description": "JSON array or key=value pairs with the necessary bill information. See the model for the exact specifications."
        }
      },
      "required": [
        "requestBody"
      ]
    },
    "method": "post",
    "pathTemplate": "/v1/bills",
    "parameters": [],
    "executionParameters": [],
    "requestBodyContentType": "application/json",
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "store_bill"
  },
  {
    "name": "get_bill",
    "tags": [
      "bills"
    ],
    "description": "Get a single bill.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the bill."
        },
        "start": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD. If it is are added to the request, Firefly III will calculate the appropriate payment and paid dates.\n"
        },
        "end": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD. If it is added to the request, Firefly III will calculate the appropriate payment and paid dates.\n"
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/bills/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the bill."
      },
      {
        "in": "query",
        "name": "start",
        "description": "A date formatted YYYY-MM-DD. If it is are added to the request, Firefly III will calculate the appropriate payment and paid dates.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-09-17"
        }
      },
      {
        "in": "query",
        "name": "end",
        "description": "A date formatted YYYY-MM-DD. If it is added to the request, Firefly III will calculate the appropriate payment and paid dates.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-12-31"
        }
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      },
      {
        "name": "start",
        "in": "query"
      },
      {
        "name": "end",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "get_bill"
  },
  {
    "name": "update_bill",
    "tags": [
      "bills"
    ],
    "description": "Update existing bill.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the bill."
        },
        "requestBody": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "currency_id": {
              "type": "string",
              "description": "Use either currency_id or currency_code"
            },
            "currency_code": {
              "type": "string",
              "description": "Use either currency_id or currency_code"
            },
            "name": {
              "type": "string"
            },
            "amount_min": {
              "type": "string"
            },
            "amount_max": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "end_date": {
              "type": "string",
              "format": "date-time",
              "description": "The date after which this bill is no longer valid or applicable"
            },
            "extension_date": {
              "type": "string",
              "format": "date-time",
              "description": "The date before which the bill must be renewed (or cancelled)"
            },
            "repeat_freq": {
              "type": "string",
              "description": "How often the bill must be paid.",
              "enum": [
                "weekly",
                "monthly",
                "quarterly",
                "half-year",
                "yearly"
              ]
            },
            "skip": {
              "type": "integer",
              "format": "int32",
              "description": "How often the bill must be skipped. 1 means a bi-monthly bill."
            },
            "active": {
              "type": "boolean",
              "description": "If the bill is active."
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "object_group_id": {
              "type": "string",
              "nullable": true,
              "description": "The group ID of the group this object is part of. NULL if no group."
            },
            "object_group_title": {
              "type": "string",
              "nullable": true,
              "description": "The name of the group. NULL if no group."
            }
          },
          "description": "JSON array or key=value pairs with updated bill information. See the model for the exact specifications."
        }
      },
      "required": [
        "id",
        "requestBody"
      ]
    },
    "method": "put",
    "pathTemplate": "/v1/bills/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the bill."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "requestBodyContentType": "application/json",
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "update_bill"
  },
  {
    "name": "list_transaction_by_category",
    "tags": [
      "categories"
    ],
    "description": "List all transactions in a category, optionally limited to the date ranges specified.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "id": {
          "type": "string",
          "description": "The ID of the category."
        },
        "start": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD, to limit the result list.\n"
        },
        "end": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD, to limit the result list.\n"
        },
        "type": {
          "type": "string",
          "enum": [
            "all",
            "withdrawal",
            "withdrawals",
            "expense",
            "deposit",
            "deposits",
            "income",
            "transfer",
            "transfers",
            "opening_balance",
            "reconciliation",
            "special",
            "specials",
            "default"
          ],
          "description": "Optional filter on the transaction type(s) returned"
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/categories/{id}/transactions",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the category."
      },
      {
        "in": "query",
        "name": "start",
        "description": "A date formatted YYYY-MM-DD, to limit the result list.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-09-17"
        }
      },
      {
        "in": "query",
        "name": "end",
        "description": "A date formatted YYYY-MM-DD, to limit the result list.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-12-31"
        }
      },
      {
        "in": "query",
        "name": "type",
        "description": "Optional filter on the transaction type(s) returned",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "withdrawal",
            "withdrawals",
            "expense",
            "deposit",
            "deposits",
            "income",
            "transfer",
            "transfers",
            "opening_balance",
            "reconciliation",
            "special",
            "specials",
            "default"
          ]
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "id",
        "in": "path"
      },
      {
        "name": "start",
        "in": "query"
      },
      {
        "name": "end",
        "in": "query"
      },
      {
        "name": "type",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_transaction_by_category"
  },
  {
    "name": "list_attachment_by_category",
    "tags": [
      "categories"
    ],
    "description": "Lists all attachments.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "id": {
          "type": "string",
          "description": "The ID of the category."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/categories/{id}/attachments",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the category."
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_attachment_by_category"
  },
  {
    "name": "list_category",
    "tags": [
      "categories"
    ],
    "description": "List all categories.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        }
      }
    },
    "method": "get",
    "pathTemplate": "/v1/categories",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_category"
  },
  {
    "name": "store_category",
    "tags": [
      "categories"
    ],
    "description": "Creates a new category. The data required can be submitted as a JSON body or as a list of parameters.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "requestBody": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "name": {
              "type": "string"
            },
            "notes": {
              "type": "string",
              "nullable": true
            },
            "native_currency_id": {
              "type": "string",
              "description": "The administration's native currency ID."
            },
            "native_currency_code": {
              "type": "string",
              "description": "The administration's native currency code."
            },
            "native_currency_symbol": {
              "type": "string",
              "description": "The administration's native currency symbol."
            },
            "native_currency_decimal_places": {
              "type": "integer",
              "format": "int32",
              "description": "The administration's native currency decimal places."
            },
            "spent": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "currency_id": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string"
                  },
                  "currency_symbol": {
                    "type": "string"
                  },
                  "currency_decimal_places": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of decimals supported by the currency"
                  },
                  "sum": {
                    "type": "string",
                    "description": "The amount spent."
                  }
                }
              }
            },
            "earned": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "currency_id": {
                    "type": "string"
                  },
                  "currency_code": {
                    "type": "string"
                  },
                  "currency_symbol": {
                    "type": "string"
                  },
                  "currency_decimal_places": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of decimals supported by the currency"
                  },
                  "sum": {
                    "type": "string",
                    "description": "The amount earned."
                  }
                }
              }
            }
          },
          "description": "JSON array or key=value pairs with the necessary category information. See the model for the exact specifications."
        }
      },
      "required": [
        "requestBody"
      ]
    },
    "method": "post",
    "pathTemplate": "/v1/categories",
    "parameters": [],
    "executionParameters": [],
    "requestBodyContentType": "application/json",
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "store_category"
  },
  {
    "name": "get_category",
    "tags": [
      "categories"
    ],
    "description": "Get a single category.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the category."
        },
        "start": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD, to show spent and earned info.\n"
        },
        "end": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD, to show spent and earned info.\n"
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/categories/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the category."
      },
      {
        "in": "query",
        "name": "start",
        "description": "A date formatted YYYY-MM-DD, to show spent and earned info.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-09-17"
        }
      },
      {
        "in": "query",
        "name": "end",
        "description": "A date formatted YYYY-MM-DD, to show spent and earned info.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-12-31"
        }
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      },
      {
        "name": "start",
        "in": "query"
      },
      {
        "name": "end",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "get_category"
  },
  {
    "name": "update_category",
    "tags": [
      "categories"
    ],
    "description": "Update existing category.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the category."
        },
        "requestBody": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "notes": {
              "type": "string",
              "nullable": true
            }
          },
          "description": "JSON array with updated category information. See the model for the exact specifications."
        }
      },
      "required": [
        "id",
        "requestBody"
      ]
    },
    "method": "put",
    "pathTemplate": "/v1/categories/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the category."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "requestBodyContentType": "application/json",
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "update_category"
  },
  {
    "name": "delete_category",
    "tags": [
      "categories"
    ],
    "description": "Delete a category. Transactions will not be removed.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the category."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "delete",
    "pathTemplate": "/v1/categories/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the category."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "delete_category"
  },
  {
    "name": "list_attachment_by_tag",
    "tags": [
      "tags"
    ],
    "description": "Lists all attachments.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "tag": {
          "type": "string",
          "description": "Either the tag itself or the tag ID."
        }
      },
      "required": [
        "tag"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/tags/{tag}/attachments",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "path",
        "name": "tag",
        "description": "Either the tag itself or the tag ID.",
        "required": true,
        "schema": {
          "type": "string",
          "format": "string",
          "example": "groceries"
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "tag",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_attachment_by_tag"
  },
  {
    "name": "list_transaction_by_tag",
    "tags": [
      "tags"
    ],
    "description": "List all transactions with this tag.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "tag": {
          "type": "string",
          "description": "Either the tag itself or the tag ID."
        },
        "start": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD. This is the start date of the selected range (inclusive).\n"
        },
        "end": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD. This is the end date of the selected range (inclusive).\n"
        },
        "type": {
          "type": "string",
          "enum": [
            "all",
            "withdrawal",
            "withdrawals",
            "expense",
            "deposit",
            "deposits",
            "income",
            "transfer",
            "transfers",
            "opening_balance",
            "reconciliation",
            "special",
            "specials",
            "default"
          ],
          "description": "Optional filter on the transaction type(s) returned."
        }
      },
      "required": [
        "tag"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/tags/{tag}/transactions",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "path",
        "name": "tag",
        "description": "Either the tag itself or the tag ID.",
        "required": true,
        "schema": {
          "type": "string",
          "format": "string",
          "example": "groceries"
        }
      },
      {
        "in": "query",
        "name": "start",
        "description": "A date formatted YYYY-MM-DD. This is the start date of the selected range (inclusive).\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-09-17"
        }
      },
      {
        "in": "query",
        "name": "end",
        "description": "A date formatted YYYY-MM-DD. This is the end date of the selected range (inclusive).\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-09-17"
        }
      },
      {
        "in": "query",
        "name": "type",
        "description": "Optional filter on the transaction type(s) returned.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "withdrawal",
            "withdrawals",
            "expense",
            "deposit",
            "deposits",
            "income",
            "transfer",
            "transfers",
            "opening_balance",
            "reconciliation",
            "special",
            "specials",
            "default"
          ]
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "tag",
        "in": "path"
      },
      {
        "name": "start",
        "in": "query"
      },
      {
        "name": "end",
        "in": "query"
      },
      {
        "name": "type",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_transaction_by_tag"
  },
  {
    "name": "list_tag",
    "tags": [
      "tags"
    ],
    "description": "List all of the user's tags.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        }
      }
    },
    "method": "get",
    "pathTemplate": "/v1/tags",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_tag"
  },
  {
    "name": "store_tag",
    "tags": [
      "tags"
    ],
    "description": "Creates a new tag. The data required can be submitted as a JSON body or as a list of parameters.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "requestBody": {
          "title": "A single tag (A)",
          "type": "object",
          "required": [
            "tag"
          ],
          "properties": {
            "tag": {
              "type": "string",
              "description": "The tag"
            },
            "date": {
              "type": "string",
              "description": "The date to which the tag is applicable.",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "latitude": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "Latitude of the tag's location, if applicable. Can be used to draw a map."
            },
            "longitude": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "Latitude of the tag's location, if applicable. Can be used to draw a map."
            },
            "zoom_level": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "description": "Zoom level for the map, if drawn. This to set the box right. Unfortunately this is a proprietary value because each map provider has different zoom levels."
            }
          },
          "description": "JSON array or key=value pairs with the necessary tag information. See the model for the exact specifications."
        }
      },
      "required": [
        "requestBody"
      ]
    },
    "method": "post",
    "pathTemplate": "/v1/tags",
    "parameters": [],
    "executionParameters": [],
    "requestBodyContentType": "application/json",
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "store_tag"
  },
  {
    "name": "get_tag",
    "tags": [
      "tags"
    ],
    "description": "Get a single tag.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "tag": {
          "type": "string",
          "description": "Either the tag itself or the tag ID. If you use the tag itself, and it contains international (non-ASCII) characters, your milage may vary."
        }
      },
      "required": [
        "tag"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/tags/{tag}",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "path",
        "name": "tag",
        "description": "Either the tag itself or the tag ID. If you use the tag itself, and it contains international (non-ASCII) characters, your milage may vary.",
        "required": true,
        "schema": {
          "type": "string",
          "format": "string",
          "example": "groceries"
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "tag",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "get_tag"
  },
  {
    "name": "update_tag",
    "tags": [
      "tags"
    ],
    "description": "Update existing tag.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "description": "Either the tag itself or the tag ID. If you use the tag itself, and it contains international (non-ASCII) characters, your milage may vary."
        },
        "requestBody": {
          "title": "A single tag (B)",
          "type": "object",
          "properties": {
            "tag": {
              "type": "string",
              "description": "The tag"
            },
            "date": {
              "type": "string",
              "description": "The date to which the tag is applicable.",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "latitude": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "Latitude of the tag's location, if applicable. Can be used to draw a map."
            },
            "longitude": {
              "type": "number",
              "format": "double",
              "nullable": true,
              "description": "Latitude of the tag's location, if applicable. Can be used to draw a map."
            },
            "zoom_level": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "description": "Zoom level for the map, if drawn. This to set the box right. Unfortunately this is a proprietary value because each map provider has different zoom levels."
            }
          },
          "description": "JSON array with updated tag information. See the model for the exact specifications."
        }
      },
      "required": [
        "tag",
        "requestBody"
      ]
    },
    "method": "put",
    "pathTemplate": "/v1/tags/{tag}",
    "parameters": [
      {
        "in": "path",
        "name": "tag",
        "description": "Either the tag itself or the tag ID. If you use the tag itself, and it contains international (non-ASCII) characters, your milage may vary.",
        "required": true,
        "schema": {
          "type": "string",
          "format": "string",
          "example": "groceries"
        }
      }
    ],
    "executionParameters": [
      {
        "name": "tag",
        "in": "path"
      }
    ],
    "requestBodyContentType": "application/json",
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "update_tag"
  },
  {
    "name": "delete_tag",
    "tags": [
      "tags"
    ],
    "description": "Delete an tag.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "description": "Either the tag itself or the tag ID. If you use the tag itself, and it contains international (non-ASCII) characters, your milage may vary."
        }
      },
      "required": [
        "tag"
      ]
    },
    "method": "delete",
    "pathTemplate": "/v1/tags/{tag}",
    "parameters": [
      {
        "in": "path",
        "name": "tag",
        "description": "Either the tag itself or the tag ID. If you use the tag itself, and it contains international (non-ASCII) characters, your milage may vary.",
        "required": true,
        "schema": {
          "type": "string",
          "format": "string",
          "example": "groceries"
        }
      }
    ],
    "executionParameters": [
      {
        "name": "tag",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "delete_tag"
  },
  {
    "name": "list_links_by_journal",
    "tags": [
      "transactions"
    ],
    "description": "Lists all the transaction links for an individual journal (a split). Don't use the group ID, you need the actual underlying journal (the split).",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "id": {
          "type": "string",
          "description": "The ID of the transaction journal / the split."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/transaction-journals/{id}/links",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the transaction journal / the split."
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_links_by_journal"
  },
  {
    "name": "get_transaction_by_journal",
    "tags": [
      "transactions"
    ],
    "description": "Get a single transaction by underlying journal (split).",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the transaction journal (split)."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/transaction-journals/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the transaction journal (split)."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "get_transaction_by_journal"
  },
  {
    "name": "delete_transaction_journal",
    "tags": [
      "transactions"
    ],
    "description": "Delete an individual journal (split) from a transaction.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the transaction journal (the split) you wish to delete."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "delete",
    "pathTemplate": "/v1/transaction-journals/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the transaction journal (the split) you wish to delete."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "delete_transaction_journal"
  },
  {
    "name": "list_attachment_by_transaction",
    "tags": [
      "transactions"
    ],
    "description": "Lists all attachments.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "id": {
          "type": "string",
          "description": "The ID of the transaction."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/transactions/{id}/attachments",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the transaction."
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_attachment_by_transaction"
  },
  {
    "name": "list_event_by_transaction",
    "tags": [
      "transactions"
    ],
    "description": "Lists all piggy bank events.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "id": {
          "type": "string",
          "description": "The ID of the transaction."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/transactions/{id}/piggy-bank-events",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the transaction."
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_event_by_transaction"
  },
  {
    "name": "list_transaction",
    "tags": [
      "transactions"
    ],
    "description": "List all the user's transactions.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "start": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD. This is the start date of the selected range (inclusive).\n"
        },
        "end": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD. This is the end date of the selected range (inclusive).\n"
        },
        "type": {
          "type": "string",
          "enum": [
            "all",
            "withdrawal",
            "withdrawals",
            "expense",
            "deposit",
            "deposits",
            "income",
            "transfer",
            "transfers",
            "opening_balance",
            "reconciliation",
            "special",
            "specials",
            "default"
          ],
          "description": "Optional filter on the transaction type(s) returned."
        }
      }
    },
    "method": "get",
    "pathTemplate": "/v1/transactions",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "query",
        "name": "start",
        "description": "A date formatted YYYY-MM-DD. This is the start date of the selected range (inclusive).\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-09-17"
        }
      },
      {
        "in": "query",
        "name": "end",
        "description": "A date formatted YYYY-MM-DD. This is the end date of the selected range (inclusive).\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date",
          "example": "2018-09-17"
        }
      },
      {
        "in": "query",
        "name": "type",
        "description": "Optional filter on the transaction type(s) returned.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "withdrawal",
            "withdrawals",
            "expense",
            "deposit",
            "deposits",
            "income",
            "transfer",
            "transfers",
            "opening_balance",
            "reconciliation",
            "special",
            "specials",
            "default"
          ]
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "start",
        "in": "query"
      },
      {
        "name": "end",
        "in": "query"
      },
      {
        "name": "type",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "list_transaction"
  },
  {
    "name": "store_transaction",
    "tags": [
      "transactions"
    ],
    "description": "Creates a new transaction. The data required can be submitted as a JSON body or as a list of parameters.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "requestBody": {
          "type": "object",
          "required": [
            "transactions"
          ],
          "properties": {
            "error_if_duplicate_hash": {
              "type": "boolean",
              "description": "Break if the submitted transaction exists already."
            },
            "apply_rules": {
              "type": "boolean",
              "description": "Whether or not to apply rules when submitting transaction."
            },
            "fire_webhooks": {
              "type": "boolean",
              "default": true,
              "description": "Whether or not to fire the webhooks that are related to this event."
            },
            "group_title": {
              "type": "string",
              "description": "Title of the transaction if it has been split in more than one piece. Empty otherwise.",
              "nullable": true
            },
            "transactions": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "amount",
                  "date",
                  "description",
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "withdrawal",
                      "deposit",
                      "transfer",
                      "reconciliation",
                      "opening balance"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date of the transaction"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount of the transaction."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the transaction."
                  },
                  "order": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true,
                    "description": "Order of this entry in the list of transactions."
                  },
                  "currency_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "Currency ID. Default is the source account's currency, or the user's default currency. The value you submit may be overruled by the source or destination account."
                  },
                  "currency_code": {
                    "type": "string",
                    "nullable": true,
                    "description": "Currency code. Default is the source account's currency, or the user's default currency. The value you submit may be overruled by the source or destination account."
                  },
                  "foreign_amount": {
                    "type": "string",
                    "nullable": true,
                    "description": "The amount in a foreign currency."
                  },
                  "foreign_currency_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "Currency ID of the foreign currency. Default is null. Is required when you submit a foreign amount."
                  },
                  "foreign_currency_code": {
                    "type": "string",
                    "description": "Currency code of the foreign currency. Default is NULL. Can be used instead of the foreign_currency_id, but this or the ID is required when submitting a foreign amount.",
                    "nullable": true
                  },
                  "budget_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "The budget ID for this transaction."
                  },
                  "budget_name": {
                    "type": "string",
                    "description": "The name of the budget to be used. If the budget name is unknown, the ID will be used or the value will be ignored.",
                    "nullable": true
                  },
                  "category_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "The category ID for this transaction."
                  },
                  "category_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "The name of the category to be used. If the category is unknown, it will be created. If the ID and the name point to different categories, the ID overrules the name."
                  },
                  "source_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the source account. For a withdrawal or a transfer, this must always be an asset account. For deposits, this must be a revenue account."
                  },
                  "source_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the source account. For a withdrawal or a transfer, this must always be an asset account. For deposits, this must be a revenue account. Can be used instead of the source_id. If the transaction is a deposit, the source_name can be filled in freely: the account will be created based on the name."
                  },
                  "destination_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the destination account. For a deposit or a transfer, this must always be an asset account. For withdrawals this must be an expense account."
                  },
                  "destination_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the destination account. You can submit the name instead of the ID. For everything except transfers, the account will be auto-generated if unknown, so submitting a name is enough."
                  },
                  "reconciled": {
                    "type": "boolean",
                    "description": "If the transaction has been reconciled already. When you set this, the amount can no longer be edited by the user."
                  },
                  "piggy_bank_id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional. Use either this or the piggy_bank_name",
                    "nullable": true
                  },
                  "piggy_bank_name": {
                    "type": "string",
                    "description": "Optional. Use either this or the piggy_bank_id",
                    "nullable": true
                  },
                  "bill_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "Optional. Use either this or the bill_name"
                  },
                  "bill_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Optional. Use either this or the bill_id"
                  },
                  "tags": {
                    "type": "array",
                    "nullable": true,
                    "description": "Array of tags.",
                    "items": {
                      "type": "string",
                      "description": "Tag."
                    }
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true
                  },
                  "internal_reference": {
                    "type": "string",
                    "nullable": true,
                    "description": "Reference to internal reference of other systems."
                  },
                  "external_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "Reference to external ID in other systems."
                  },
                  "external_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "External, custom URL for this transaction."
                  },
                  "bunq_payment_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "Internal ID of bunq transaction. Field is no longer used but still works."
                  },
                  "sepa_cc": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA Clearing Code"
                  },
                  "sepa_ct_op": {
                    "type": "string",
                    "description": "SEPA Opposing Account Identifier",
                    "nullable": true
                  },
                  "sepa_ct_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA end-to-end Identifier"
                  },
                  "sepa_db": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA mandate identifier"
                  },
                  "sepa_country": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA Country"
                  },
                  "sepa_ep": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA External Purpose indicator"
                  },
                  "sepa_ci": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA Creditor Identifier"
                  },
                  "sepa_batch_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA Batch ID"
                  },
                  "interest_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "book_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "process_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "due_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "payment_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "invoice_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          },
          "description": "JSON array or key=value pairs with the necessary transaction information. See the model for the exact specifications."
        }
      },
      "required": [
        "requestBody"
      ]
    },
    "method": "post",
    "pathTemplate": "/v1/transactions",
    "parameters": [],
    "executionParameters": [],
    "requestBodyContentType": "application/json",
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "store_transaction"
  },
  {
    "name": "get_transaction",
    "tags": [
      "transactions"
    ],
    "description": "Get a single transaction.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the transaction."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/transactions/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the transaction."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "get_transaction"
  },
  {
    "name": "update_transaction",
    "tags": [
      "transactions"
    ],
    "description": "Update an existing transaction.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the transaction."
        },
        "requestBody": {
          "type": "object",
          "properties": {
            "apply_rules": {
              "type": "boolean",
              "description": "Whether or not to apply rules when submitting transaction."
            },
            "fire_webhooks": {
              "type": "boolean",
              "default": true,
              "description": "Whether or not to fire the webhooks that are related to this event."
            },
            "group_title": {
              "type": "string",
              "description": "Title of the transaction if it has been split in more than one piece. Empty otherwise.",
              "nullable": true
            },
            "transactions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "transaction_journal_id": {
                    "type": "string",
                    "description": "Transaction journal ID of current transaction (split)."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "withdrawal",
                      "deposit",
                      "transfer",
                      "reconciliation",
                      "opening balance"
                    ]
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date of the transaction"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount of the transaction."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the transaction."
                  },
                  "order": {
                    "type": "integer",
                    "format": "int32",
                    "nullable": true,
                    "description": "Order of this entry in the list of transactions."
                  },
                  "currency_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "Currency ID. Default is the source account's currency, or the user's default currency. Can be used instead of currency_code."
                  },
                  "currency_code": {
                    "type": "string",
                    "nullable": true,
                    "description": "Currency code. Default is the source account's currency, or the user's default currency. Can be used instead of currency_id."
                  },
                  "currency_symbol": {
                    "type": "string"
                  },
                  "currency_name": {
                    "type": "string"
                  },
                  "currency_decimal_places": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of decimals used in this currency."
                  },
                  "foreign_amount": {
                    "type": "string",
                    "nullable": true,
                    "description": "The amount in a foreign currency."
                  },
                  "foreign_currency_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "Currency ID of the foreign currency. Default is null. Is required when you submit a foreign amount."
                  },
                  "foreign_currency_code": {
                    "type": "string",
                    "description": "Currency code of the foreign currency. Default is NULL. Can be used instead of the foreign_currency_id, but this or the ID is required when submitting a foreign amount.",
                    "nullable": true
                  },
                  "foreign_currency_symbol": {
                    "type": "string",
                    "nullable": true
                  },
                  "foreign_currency_decimal_places": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of decimals in the currency",
                    "nullable": true
                  },
                  "budget_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "The budget ID for this transaction."
                  },
                  "budget_name": {
                    "type": "string",
                    "description": "The name of the budget to be used. If the budget name is unknown, the ID will be used or the value will be ignored.",
                    "nullable": true
                  },
                  "category_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "The category ID for this transaction."
                  },
                  "category_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "The name of the category to be used. If the category is unknown, it will be created. If the ID and the name point to different categories, the ID overrules the name."
                  },
                  "source_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the source account. For a withdrawal or a transfer, this must always be an asset account. For deposits, this must be a revenue account."
                  },
                  "source_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the source account. For a withdrawal or a transfer, this must always be an asset account. For deposits, this must be a revenue account. Can be used instead of the source_id. If the transaction is a deposit, the source_name can be filled in freely: the account will be created based on the name."
                  },
                  "source_iban": {
                    "type": "string",
                    "nullable": true
                  },
                  "destination_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the destination account. For a deposit or a transfer, this must always be an asset account. For withdrawals this must be an expense account."
                  },
                  "destination_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the destination account. You can submit the name instead of the ID. For everything except transfers, the account will be auto-generated if unknown, so submitting a name is enough."
                  },
                  "destination_iban": {
                    "type": "string",
                    "nullable": true
                  },
                  "reconciled": {
                    "type": "boolean",
                    "description": "If the transaction has been reconciled already. When you set this, the amount can no longer be edited by the user."
                  },
                  "bill_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "Optional. Use either this or the bill_name"
                  },
                  "bill_name": {
                    "type": "string",
                    "nullable": true,
                    "description": "Optional. Use either this or the bill_id"
                  },
                  "tags": {
                    "type": "array",
                    "nullable": true,
                    "description": "Array of tags.",
                    "items": {
                      "type": "string",
                      "description": "Tag."
                    }
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true
                  },
                  "internal_reference": {
                    "type": "string",
                    "nullable": true,
                    "description": "Reference to internal reference of other systems."
                  },
                  "external_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "Reference to external ID in other systems."
                  },
                  "external_url": {
                    "type": "string",
                    "nullable": true,
                    "description": "External, custom URL for this transaction."
                  },
                  "bunq_payment_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "Internal ID of bunq transaction."
                  },
                  "sepa_cc": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA Clearing Code"
                  },
                  "sepa_ct_op": {
                    "type": "string",
                    "description": "SEPA Opposing Account Identifier",
                    "nullable": true
                  },
                  "sepa_ct_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA end-to-end Identifier"
                  },
                  "sepa_db": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA mandate identifier"
                  },
                  "sepa_country": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA Country"
                  },
                  "sepa_ep": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA External Purpose indicator"
                  },
                  "sepa_ci": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA Creditor Identifier"
                  },
                  "sepa_batch_id": {
                    "type": "string",
                    "nullable": true,
                    "description": "SEPA Batch ID"
                  },
                  "interest_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "book_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "process_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "due_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "payment_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "invoice_date": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          },
          "description": "JSON array with updated transaction information. See the model for the exact specifications."
        }
      },
      "required": [
        "id",
        "requestBody"
      ]
    },
    "method": "put",
    "pathTemplate": "/v1/transactions/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the transaction."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "requestBodyContentType": "application/json",
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "update_transaction"
  },
  {
    "name": "delete_transaction",
    "tags": [
      "transactions"
    ],
    "description": "Delete a transaction.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the transaction."
        }
      },
      "required": [
        "id"
      ]
    },
    "method": "delete",
    "pathTemplate": "/v1/transactions/{id}",
    "parameters": [
      {
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string",
          "example": "123"
        },
        "description": "The ID of the transaction."
      }
    ],
    "executionParameters": [
      {
        "name": "id",
        "in": "path"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "delete_transaction"
  },
  {
    "name": "search_accounts",
    "tags": [
      "search"
    ],
    "description": "Search for accounts",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "query": {
          "type": "string",
          "description": "The query you wish to search for."
        },
        "type": {
          "type": "string",
          "enum": [
            "all",
            "asset",
            "cash",
            "expense",
            "revenue",
            "special",
            "hidden",
            "liability",
            "liabilities",
            "Default account",
            "Cash account",
            "Asset account",
            "Expense account",
            "Revenue account",
            "Initial balance account",
            "Beneficiary account",
            "Import account",
            "Reconciliation account",
            "Loan",
            "Debt",
            "Mortgage"
          ],
          "description": "The type of accounts you wish to limit the search to."
        },
        "field": {
          "type": "string",
          "enum": [
            "all",
            "iban",
            "name",
            "number",
            "id"
          ],
          "description": "The account field(s) you want to search in."
        }
      },
      "required": [
        "query",
        "field"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/search/accounts",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "query",
        "name": "query",
        "description": "The query you wish to search for.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "checking"
        }
      },
      {
        "in": "query",
        "name": "type",
        "description": "The type of accounts you wish to limit the search to.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "asset",
            "cash",
            "expense",
            "revenue",
            "special",
            "hidden",
            "liability",
            "liabilities",
            "Default account",
            "Cash account",
            "Asset account",
            "Expense account",
            "Revenue account",
            "Initial balance account",
            "Beneficiary account",
            "Import account",
            "Reconciliation account",
            "Loan",
            "Debt",
            "Mortgage"
          ]
        }
      },
      {
        "in": "query",
        "name": "field",
        "description": "The account field(s) you want to search in.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "iban",
            "name",
            "number",
            "id"
          ]
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "query",
        "in": "query"
      },
      {
        "name": "type",
        "in": "query"
      },
      {
        "name": "field",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "search_accounts"
  },
  {
    "name": "search_transactions",
    "tags": [
      "search"
    ],
    "description": "Searches through the users transactions.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Number of items per page. The default pagination is per 50 items."
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "description": "Page number. The default pagination is per 50 items."
        },
        "query": {
          "type": "string",
          "description": "The query you wish to search for."
        }
      },
      "required": [
        "query"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/search/transactions",
    "parameters": [
      {
        "in": "query",
        "name": "limit",
        "description": "Number of items per page. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      },
      {
        "in": "query",
        "name": "page",
        "description": "Page number. The default pagination is per 50 items.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      },
      {
        "in": "query",
        "name": "query",
        "description": "The query you wish to search for.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "groceries"
        }
      }
    ],
    "executionParameters": [
      {
        "name": "limit",
        "in": "query"
      },
      {
        "name": "page",
        "in": "query"
      },
      {
        "name": "query",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "search_transactions"
  },
  {
    "name": "get_basic_summary",
    "tags": [
      "summary"
    ],
    "description": "Returns basic sums of the users data, like the net worth, spent and earned amounts. It is multi-currency, and is used in Firefly III to populate the dashboard.\n",
    "inputSchema": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD.\n"
        },
        "end": {
          "type": "string",
          "description": "A date formatted YYYY-MM-DD.\n"
        },
        "currency_code": {
          "type": "string",
          "description": "A currency code like EUR or USD, to filter the result.\n"
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "method": "get",
    "pathTemplate": "/v1/summary/basic",
    "parameters": [
      {
        "in": "query",
        "name": "start",
        "description": "A date formatted YYYY-MM-DD.\n",
        "required": true,
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      {
        "in": "query",
        "name": "end",
        "description": "A date formatted YYYY-MM-DD.\n",
        "required": true,
        "schema": {
          "type": "string",
          "format": "date"
        }
      },
      {
        "in": "query",
        "name": "currency_code",
        "description": "A currency code like EUR or USD, to filter the result.\n",
        "required": false,
        "schema": {
          "type": "string",
          "format": "string"
        }
      }
    ],
    "executionParameters": [
      {
        "name": "start",
        "in": "query"
      },
      {
        "name": "end",
        "in": "query"
      },
      {
        "name": "currency_code",
        "in": "query"
      }
    ],
    "securityRequirements": [
      {
        "firefly_iii_auth": []
      },
      {
        "local_bearer_auth": []
      }
    ],
    "operationId": "get_basic_summary"
  }
];

export const securitySchemes = {
  "firefly_iii_auth": {
    "type": "oauth2",
    "description": "Default OAuth2 flow",
    "flows": {
      "authorizationCode": {
        "authorizationUrl": "https://demo.firefly-iii.org/oauth/authorize",
        "tokenUrl": "https://demo.firefly-iii.org/oauth/token",
        "refreshUrl": "https://demo.firefly-iii.org/oauth/token",
        "scopes": {}
      }
    }
  },
  "local_bearer_auth": {
    "description": "Optional Bearer token flow",
    "type": "http",
    "scheme": "bearer"
  }
} as SecuritySchemeDefinition;
