import { getToolsFromOpenApiDocument } from './generator/api';
import fs from 'fs';
import type { McpToolDefinition } from '../src/types/mcp-tool-definition';
import SwaggerParser from '@apidevtools/swagger-parser';
import { OpenAPIV3 } from 'openapi-types';

// Custom Filter
const ENABLED_PATH_PREFIXES = [
 '/v1/about',
 '/v1/accounts',
 '/v1/attachments',
 '/v1/bills',
 '/v1/budgets',
 '/v1/budget-limits',
 '/v1/categories',
 '/v1/currencies',
 '/v1/search',
 '/v1/tags',
 '/v1/transactions',
]
const custonFilterFn = (tool: McpToolDefinition) => {
  const path = tool.pathTemplate;
  const isEnabled = ENABLED_PATH_PREFIXES.some(prefix => path.startsWith(prefix));
  return isEnabled;
}

(async () => {
  // Load the OpenAPI document
  const document = (await SwaggerParser.dereference('https://api-docs.firefly-iii.org/firefly-iii-6.2.13-v1.yaml')) as OpenAPIV3.Document

  const tools: McpToolDefinition[] = await getToolsFromOpenApiDocument(document, {
    filterFn: custonFilterFn,
  });

  const securitySchemes = document.components?.securitySchemes;

  // Create the TypeScript code string
  const tsCode = `// This file is auto-generated by scripts/generator.ts

import type { McpToolDefinition, SecuritySchemeDefinition } from '../types/mcp-tool-definition';

export const generatedTools: McpToolDefinition[] = ${JSON.stringify(tools, null, 2)};

export const securitySchemes = ${JSON.stringify(securitySchemes, null, 2)} as SecuritySchemeDefinition;
`;

  fs.writeFileSync('./src/definitions/tools.ts', tsCode);
  console.log('Successfully generated generated-tools.ts');
})();