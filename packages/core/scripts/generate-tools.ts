import fs from 'node:fs';
import SwaggerParser from '@apidevtools/swagger-parser';
import { OpenAPIV3 } from 'openapi-types';
import { McpToolDefinition } from '../src/types';
import { getToolsFromOpenApiDocument } from './generator/api';

/** Api Document URL */
const API_DOCUMENT_URL = 'https://api-docs.firefly-iii.org/firefly-iii-6.2.13-v1.yaml';
const OUTPUT_FILE = './src/tools.ts';

/** Enabled actions to generate tools for */
const ENABLED_ACTIONS: {
  tag: string;
  methods?: ('get' | 'post' | 'put' | 'delete' | 'patch')[];
}[] = [
    { tag: 'accounts', methods: ['get', 'put'] },
    { tag: 'attachments', methods: ['get', 'post', 'put', 'delete'] },
    // { tag: 'available_budgets' },
    { tag: 'bills', methods: ['get', 'put', 'post'] },
    { tag: 'categories', methods: ['get', 'put', 'post', 'delete'] },
    { tag: 'search', methods: ['get'] },
    { tag: 'summary', methods: ['get'] },
    { tag: 'tags', methods: ['get', 'put', 'post', 'delete'] },
    { tag: 'transactions', methods: ['get', 'put', 'post', 'delete'] },
  ]

const custonFilterFn = (tool: McpToolDefinition) => {
  const action = ENABLED_ACTIONS.find(action => action.tag === tool.tags[0]);
  if (!action) return false;
  if (action.methods && !action.methods.includes(tool.method as ('get' | 'post' | 'put' | 'delete' | 'patch'))) return false;
  return true;
}

(async () => {
  // Load the OpenAPI document
  const document = (await SwaggerParser.dereference(API_DOCUMENT_URL)) as OpenAPIV3.Document

  const tools: McpToolDefinition[] = await getToolsFromOpenApiDocument(document, {
    filterFn: custonFilterFn,
  });

  // const securitySchemes = document.components?.securitySchemes;

  // Create the TypeScript code string
  const tsCode = `// This file is auto-generated by scripts/generator.ts

import type { McpToolDefinition } from './types.js';

export const generatedTools: McpToolDefinition[] = ${JSON.stringify(tools, null, 2)};
`;

  fs.writeFileSync(OUTPUT_FILE, tsCode);
  console.log('Successfully generated generated-tools.ts');
})();